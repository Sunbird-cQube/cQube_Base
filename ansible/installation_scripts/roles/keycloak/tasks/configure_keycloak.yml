---
- name: Checking the realm
  shell: ./kcadm.sh get realms --fields realm,enabled --no-config --server http://localhost:8080/auth --realm master --user {{ keycloak_adm_user }} --password {{ keycloak_adm_passwd }}
  args:
    chdir: "{{ base_dir }}/cqube/keycloak/bin/"
  register: result

- name: Parsing the output
  set_fact:
    realm_created: True
  loop: '{{ result.stdout }}'
  when: item.realm == "cQube"

- name: Deleting the existing realm
  shell: ./kcadm.sh delete realms/{{ realm_name }} --no-config --server http://localhost:8080/auth --realm master --user {{ keycloak_adm_user }} --password {{ keycloak_adm_passwd }}
  args:
    chdir: "{{ base_dir }}/cqube/keycloak/bin/"
  when: realm_created

- name: Creating the template for realm
  template:
    src: cQube_realm.json.j2
    dest: kc_templates/cQube_realm.json
    owner: "{{ system_user_name }}"
    group: "{{ system_user_name }}"
    mode: '0644'

- name: Creating the realm 
  shell: "{{ base_dir }}/cqube/keycloak/bin/kcadm.sh create realms -f {{ cQube_realm_json }} --no-config --server http://localhost:8080/auth --realm master --user {{ keycloak_adm_user }} --password {{ keycloak_adm_passwd }}"
  args:
    executable: /bin/bash

- name: Getting the client ID for emission app 
  shell: ./kcadm.sh get clients -r {{realm_name}} --fields id,clientId --no-config --server http://localhost:8080/auth --realm master --user {{ keycloak_adm_user }} --password {{ keycloak_adm_passwd }}   
  args:
    chdir: "{{ base_dir }}/cqube/keycloak/bin/"
  register: result

- name: Regenerating the client's secret
  shell: ./kcadm.sh create clients/{{ item[1].id }}/client-secret -r {{ realm_name }} --no-config --server http://localhost:8080/auth --realm master --user {{ keycloak_adm_user }} --password {{ keycloak_adm_passwd }}
  args:
    chdir: "{{ base_dir }}/cqube/keycloak/bin/"
  when: item[1].clientId == item[0]
  with_nested:
    - [ 'account', 'broker', 'realm-management' ]
    - '{{ result.stdout }}'
  no_log: true

- name: Parsing the output
  set_fact:
    emi_client_id: "{{item.id}}"
  loop: '{{ result.stdout }}'
  when: item.clientId == "cqube_flask"
  no_log: true

- name: Regenerating the emission app client's secret
  shell: ./kcadm.sh create clients/{{ emi_client_id }}/client-secret -r {{ realm_name }} --no-config --server http://localhost:8080/auth --realm master --user {{ keycloak_adm_user }} --password {{ keycloak_adm_passwd }}
  args:
    chdir: "{{ base_dir }}/cqube/keycloak/bin/"

- name: Getting the emission app client's secret
  shell: ./kcadm.sh get clients/{{ emi_client_id }}/client-secret -r {{ realm_name }} --no-config --server http://localhost:8080/auth --realm master --user {{ keycloak_adm_user }} --password {{ keycloak_adm_passwd }}
  args:
    chdir: "{{ base_dir }}/cqube/keycloak/bin/"
  register: result

- name: setting variable
  set_fact:
    emi_new_secret: "{{ (result.stdout|from_json).value}}"

- name: Updating the emi_new_secret to env.py - emission app
  lineinfile:
    path: "{{ base_dir }}/cqube/emission_app/python/env.py"
    regexp: '^CLIENT_SECRET='
    line: CLIENT_SECRET= "{{ emi_new_secret }}"

- name: Restarting the emission_app service
  service: 
    name: gunicorn
    state: restarted

- name: Creating realm admin user
  shell: ./kcadm.sh create users -r {{ realm_name }} -s username={{ keycloak_adm_user }} -s enabled=true --no-config --server http://localhost:8080/auth --realm master --user {{ keycloak_adm_user }} --password {{ keycloak_adm_passwd }}
  args:
    chdir: "{{ base_dir }}/cqube/keycloak/bin/"

- name: Reseting the password for realm admin user
  shell: ./kcadm.sh set-password -r {{ realm_name }} --username {{ keycloak_adm_user }} --new-password {{ keycloak_adm_passwd }} --temporary --no-config --server http://localhost:8080/auth --realm master --user {{ keycloak_adm_user }} --password {{ keycloak_adm_passwd }}
  args:
    chdir: "{{ base_dir }}/cqube/keycloak/bin/"

- name: Assigning roles to realm admin user
  shell: ./kcadm.sh add-roles --uusername {{ keycloak_adm_user }} --rolename admin -r {{ realm_name }} --no-config --server http://localhost:8080/auth --realm master --user {{ keycloak_adm_user }} --password {{ keycloak_adm_passwd }}
  args:
    chdir: "{{ base_dir }}/cqube/keycloak/bin/"

- name: Removing default assigned roles to realm admin user
  shell: ./kcadm.sh remove-roles --uusername {{ keycloak_adm_user }} --rolename {{ item }} -r {{ realm_name }} --no-config --server http://localhost:8080/auth --realm master --user {{ keycloak_adm_user }} --password {{ keycloak_adm_passwd }}
  args:
    chdir: "{{ base_dir }}/cqube/keycloak/bin/"
  loop: 
    - offline_access
    - uma_authorization

