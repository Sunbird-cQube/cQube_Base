{
"sem_check_if_null":'''select * from flowfile except(select * from flowfile
where UPPER(SchoolId) <> 'NULL'
AND UPPER(Sem) <> 'NULL'
AND UPPER(studyingclass) <> 'NULL' )
''',
"sem_not_null":'''select * from flowfile
where UPPER(SchoolId) <> 'NULL'
AND UPPER(Sem) <> 'NULL'
AND UPPER(studyingclass) <> 'NULL'
''',
"sem_check_null_values":'''(select
SUM(CASE when SchoolId IS NULL THEN 1 ELSE 0 END) AS count_null_schoolid,
SUM(CASE when Sem IS NULL THEN 1 ELSE 0 END) AS count_null_sem,
SUM(CASE when studyingclass IS NULL THEN 1 ELSE 0 END) AS count_null_studyingclass
from flowfile)
''',
"sem_null_vals_to_log":'''update log_summary
SET school_id = sem_null_col.count_null_schoolid,
semester = sem_null_col.count_null_sem,
grade = sem_null_col.count_null_studyingclass
from sem_null_col
where sem_null_col.ff_uuid = log_summary.ff_uuid
''',
"sem_dup_check":'''select AadhaarUID,SchoolId,Sem,StudyingClass,Gujarati,Maths,ES,Science,SS,Hindi,English,Sanskrit,count(AadhaarUID) num_of_times
from flowfile
group by AadhaarUID,SchoolId,Sem,StudyingClass,Gujarati,Maths,ES,Science,SS,Hindi,English,Sanskrit
HAVING  COUNT(*) > 1
''',
"distinct_sem_records":'''SELECT AadhaarUID ,SchoolId ,
Sem ,studyingclass ,gujarati ,maths ,es,science,ss,hindi ,
english,sanskrit FROM (select AadhaarUID,SchoolId,Sem,StudyingClass,Gujarati,Maths,ES,Science,SS,Hindi,English,Sanskrit, row_number() over (partition by AadhaarUID,SchoolId,Sem,StudyingClass,Gujarati,Maths,ES,Science,SS,Hindi,English,Sanskrit) as rn from flowfile) sq where rn=1
''',
"same_id_sem_db":'''select AadhaarUID AS "student_uid",SchoolId AS "school_id",
Sem AS "semester",studyingclass AS "grade",gujarati AS "subject_2",maths AS "subject_3",es AS "subject_1",science AS subject_6,ss AS "subject_7",hindi AS "subject_5",
english AS "subject_4",sanskrit AS "subject_8",count(AadhaarUID)-1 AS num_of_times from (
select AadhaarUID,SchoolId,Sem,StudyingClass,Gujarati,Maths,ES,Science,SS,Hindi,English,Sanskrit from (SELECT AadhaarUID,SchoolId,Sem,StudyingClass,Gujarati,Maths,ES,Science,SS,Hindi,English,Sanskrit,count(*)
over (partition by AadhaarUID,SchoolId,Sem) as rn from FLOWFILE) sq Where rn >1
) group by AadhaarUID,SchoolId,Sem,StudyingClass,Gujarati,Maths,ES,Science,SS,Hindi,English,Sanskrit
''',
"save-to-sem_dup_tb_name":"student_semester_dup",
"same_id_sem_check":'''select *,count(*) as num_of_times from (
select AadhaarUID,SchoolId,Sem,StudyingClass,Gujarati,Maths,ES,Science,SS,Hindi,English,Sanskrit from (SELECT AadhaarUID,SchoolId,Sem,StudyingClass,Gujarati,Maths,ES,Science,SS,Hindi,English,Sanskrit,count(*)
over (partition by AadhaarUID,SchoolId,Sem) as rn from FLOWFILE) sq Where rn >1) group by AadhaarUID,SchoolId,Sem,StudyingClass,Gujarati,Maths,ES,Science,SS,Hindi,English,Sanskrit
''',
"same_id_sem":'''SELECT AadhaarUID AS "student_uid",SchoolId AS "school_id", 
Sem AS "semester",StudyingClass AS "grade",Gujarati AS "subject_2",Maths AS "subject_3",ES AS "subject_1",Science AS subject_6,SS AS "subject_7",Hindi AS "subject_5",
English AS "subject_4",Sanskrit AS "subject_8",num_of_times FROM flowfile
''',
"unique_sem":'''SELECT AadhaarUID,SchoolId,Sem,StudyingClass,Gujarati,Maths,ES,Science,SS,Hindi,English,Sanskrit FROM (select AadhaarUID,SchoolId,Sem,StudyingClass,Gujarati,Maths,ES,Science,SS,Hindi,English,Sanskrit, row_number() over (partition by AadhaarUID,SchoolId,Sem,StudyingClass) as rn from flowfile) sq where rn=1
''',
"check_for_non_blank":"SELECT AadhaarUID,SchoolId,Sem,StudyingClass,Gujarati,Maths,ES,Science,SS,Hindi,English,Sanskrit FROM flowfile WHERE has_records = non_empty_records",
"sem_normalize":'''SELECT aadhaaruid AS "student_uid",schoolid AS "school_id",
sem AS "semester",studyingclass AS "grade",gujarati AS "subject_2",maths AS "subject_3",es AS "subject_1",science AS subject_6,ss AS "subject_7",hindi AS "subject_5",
english AS "subject_4",sanskrit AS "subject_8" FROM flowfile
''',
"sem_save-to-_student_subject_total_marks":'''create or replace view assessment_trans_to_aggregate as
select ll.school_id,ll.grade,hr.school_name,
ll.school_latitude,ll.school_longitude,ll.district_id,hr.district_name,ll.district_latitude,
ll.district_longitude,ll.block_id,hr.block_name,'NA' as brc_name,ll.block_latitude,ll.block_longitude,ll.cluster_id,
hr.cluster_name,hr.crc_name,ll.cluster_latitude,ll.cluster_longitude,ll.semester,ll.students_count,
ll.subject_1_marks_scored,ll.subject_1_total_marks,
    ll.subject_3_marks_scored,ll.subject_3_total_marks,ll.subject_2_marks_scored,ll.subject_2_total_marks,ll.subject_4_marks_scored,ll.subject_4_total_marks
    ,ll.subject_5_marks_scored,ll.subject_5_total_marks,ll.subject_7_marks_scored,ll.subject_7_total_marks,ll.subject_6_marks_scored,ll.subject_6_total_marks
    ,ll.subject_8_marks_scored,ll.subject_8_total_marks

from (select at.subject_1_marks_scored,at.subject_1_total_marks,
    at.subject_3_marks_scored,at.subject_3_total_marks,at.subject_2_marks_scored,at.subject_2_total_marks,at.subject_4_marks_scored,at.subject_4_total_marks
    ,at.subject_5_marks_scored,at.subject_5_total_marks,at.subject_7_marks_scored,at.subject_7_total_marks,at.subject_6_marks_scored,at.subject_6_total_marks
    ,at.subject_8_marks_scored,at.subject_8_total_marks,at.students_count,at.semester,at.school_id,at.grade,
sg.school_latitude,sg.school_longitude,sg.district_id,sg.district_latitude,sg.district_longitude,sg.block_id,sg.block_latitude,sg.block_longitude,
sg.cluster_id,sg.cluster_latitude,sg.cluster_longitude
 from (
select sum(subject_1_marks_scored)as subject_1_marks_scored,sum(subject_1_total_marks) as subject_1_total_marks,
sum(subject_3_marks_scored)as subject_3_marks_scored,sum(subject_3_total_marks) as subject_3_total_marks,
sum(subject_2_marks_scored)as subject_2_marks_scored,sum(subject_2_total_marks) as subject_2_total_marks,
sum(subject_4_marks_scored)as subject_4_marks_scored,sum(subject_4_total_marks) as subject_4_total_marks,
sum(subject_5_marks_scored)as subject_5_marks_scored,sum(subject_5_total_marks) as subject_5_total_marks,
sum(subject_7_marks_scored)as subject_7_marks_scored,sum(subject_7_total_marks) as subject_7_total_marks,
sum(subject_6_marks_scored)as subject_6_marks_scored,sum(subject_6_total_marks) as subject_6_total_marks,
sum(subject_8_marks_scored)as subject_8_marks_scored,sum(subject_8_total_marks) as subject_8_total_marks
,count(distinct(student_uid)) as students_count,semester,school_id,grade
from (
select
sum(subject_1) as subject_1_marks_scored,
sum(case when subject_1  is null then 0 else 1 end)*(case when grade between 3 and 5 then 40
    when grade between 6 and 8 then 80 end) as subject_1_total_marks,
sum(subject_3) as subject_3_marks_scored,
sum(case when subject_3  is null then 0 else 1 end)*(case when grade between 3 and 5 then 40
    when grade between 6 and 8 then 80 end) as subject_3_total_marks,
sum(subject_2) as subject_2_marks_scored,
sum(case when subject_2  is null then 0 else 1 end)*(case when grade between 3 and 5 then 40
    when grade between 6 and 8 then 80 end) as subject_2_total_marks,
sum(subject_4) as subject_4_marks_scored,
sum(case when subject_4  is null then 0 else 1 end)*(case when grade between 3 and 5 then 40
    when grade between 6 and 8 then 80 end) as subject_4_total_marks,
sum(subject_5) as subject_5_marks_scored,
sum(case when subject_5  is null then 0 else 1 end)*(case when grade between 3 and 5 then 40
    when grade between 6 and 8 then 80 end) as subject_5_total_marks,
sum(subject_6) as subject_6_marks_scored,
sum(case when subject_6  is null then 0 else 1 end)*(case when grade between 3 and 5 then 40
    when grade between 6 and 8 then 80 end) as subject_6_total_marks,
sum(subject_7) as subject_7_marks_scored,
sum(case when subject_7  is null then 0 else 1 end)*(case when grade between 3 and 5 then 40
    when grade between 6 and 8 then 80 end) as subject_7_total_marks,
sum(subject_8) as subject_8_marks_scored,
sum(case when subject_8  is null then 0 else 1 end)*(case when grade between 3 and 5 then 40
    when grade between 6 and 8 then 80 end) as subject_8_total_marks,
student_uid,school_id,semester,grade
from student_semester_trans
group by student_uid,school_id,semester,grade

)as t group by school_id,semester,grade
     ) as at left join school_geo_master as sg on at.school_id=sg.school_id) as ll left join
school_hierarchy_details as hr on ll.school_id=hr.school_id;

insert into school_student_subject_total_marks as a
(school_id,grade,school_name,school_latitude,school_longitude,district_id,district_name,district_latitude,district_longitude,
block_id,block_name,brc_name,block_latitude,block_longitude,cluster_id,cluster_name,crc_name,cluster_latitude,cluster_longitude,semester,
students_count,subject_1_marks_scored,subject_1_total_marks,
    subject_2_marks_scored,subject_2_total_marks,subject_3_marks_scored,subject_3_total_marks,subject_4_marks_scored,subject_4_total_marks
    ,subject_5_marks_scored,subject_5_total_marks,subject_6_marks_scored,subject_6_total_marks,subject_7_marks_scored,subject_7_total_marks
    ,subject_8_marks_scored,subject_8_total_marks)
select school_id,grade,school_name,school_latitude,school_longitude,district_id,district_name,district_latitude,district_longitude,
block_id,block_name,brc_name,block_latitude,block_longitude,cluster_id,cluster_name,crc_name,cluster_latitude,cluster_longitude,semester,
students_count,subject_1_marks_scored,subject_1_total_marks,
    subject_2_marks_scored,subject_2_total_marks,subject_3_marks_scored,subject_3_total_marks,subject_4_marks_scored,subject_4_total_marks
    ,subject_5_marks_scored,subject_5_total_marks,subject_6_marks_scored,subject_6_total_marks,subject_7_marks_scored,subject_7_total_marks
    ,subject_8_marks_scored,subject_8_total_marks from assessment_trans_to_aggregate
on conflict (semester,school_id,grade)
do update set grade=a.grade,year= a.year,school_id=a.school_id,school_name=a.school_name,
school_latitude=a.school_latitude,school_longitude=a.school_longitude,district_id=a.district_id,
district_name=a.district_name,district_latitude=a.district_latitude,district_longitude=a.district_longitude,
block_id=a.block_id,block_name=a.block_name,brc_name=a.brc_name,block_latitude=a.block_latitude,
block_longitude=a.block_longitude,cluster_id=a.cluster_id,cluster_name=a.cluster_name,crc_name=a.crc_name,
cluster_latitude=a.cluster_latitude,cluster_longitude=a.cluster_longitude,semester=a.semester,
students_count=a.students_count,
subject_1_marks_scored=a.subject_1_marks_scored,subject_1_total_marks=a.subject_1_total_marks,
    subject_2_marks_scored=a.subject_2_marks_scored,subject_2_total_marks=a.subject_2_total_marks,
    subject_3_marks_scored=a.subject_3_marks_scored,subject_3_total_marks=a.subject_3_total_marks,
    subject_4_marks_scored=a.subject_4_marks_scored,subject_4_total_marks=a.subject_4_total_marks
    ,subject_5_marks_scored=a.subject_5_marks_scored,subject_5_total_marks=a.subject_5_total_marks,
    subject_6_marks_scored=a.subject_6_marks_scored,subject_6_total_marks=a.subject_6_total_marks,
    subject_7_marks_scored=a.subject_7_marks_scored,subject_7_total_marks=a.subject_7_total_marks
    ,subject_8_marks_scored=a.subject_8_marks_scored,subject_8_total_marks=a.subject_8_total_marks
''',
"sem_select_student_subject_total_marks":"select * from school_student_subject_total_marks limit 1",
"sem_school-wise-assesment":'''create or replace view school_semester_no_data as
select school_id,semester from school_student_subject_total_marks 
WHERE district_name IS NOT NULL AND block_latitude IS NOT NULL AND block_latitude <> 0 and cluster_name is not null
AND cluster_latitude IS NOT NULL AND cluster_latitude <> 0 AND school_latitude <>0 AND school_latitude IS NOT NULL AND school_name IS NOT NULL
group by school_id,semester
having Sum(case when subject_1_marks_scored is null then 0 else subject_1_marks_scored end + 
 case when subject_3_marks_scored is null then 0 else subject_3_marks_scored end+case when subject_2_marks_scored is null then 0 else subject_2_marks_scored end
 +case when subject_4_marks_scored is null then 0 else subject_4_marks_scored end+
 case when subject_5_marks_scored is null then 0 else subject_5_marks_scored end+case when subject_7_marks_scored is null then 0 else subject_7_marks_scored end
 +case when subject_6_marks_scored is null then 0 else subject_6_marks_scored end+case when subject_8_marks_scored is null then 0 else subject_8_marks_scored end
 ) = 0;

create or replace view school_grade as
	SELECT school_id AS x_axis,grade,
Round(NULLIF(Sum(case when subject_1_marks_scored is null then 0 else subject_1_marks_scored end + 
	case when subject_3_marks_scored is null then 0 else subject_3_marks_scored end+case when subject_2_marks_scored is null then 0 else subject_2_marks_scored end
	+case when subject_4_marks_scored is null then 0 else subject_4_marks_scored end+
	case when subject_5_marks_scored is null then 0 else subject_5_marks_scored end+case when subject_7_marks_scored is null then 0 else subject_7_marks_scored end
	+case when subject_6_marks_scored is null then 0 else subject_6_marks_scored end+case when subject_8_marks_scored is null then 0 else subject_8_marks_scored end
	),0)*100.0/
Sum(subject_1_total_marks+subject_3_total_marks+subject_2_total_marks+subject_4_total_marks+subject_5_total_marks+
	subject_7_total_marks+subject_6_total_marks+subject_8_total_marks),1)AS x_value
FROM school_student_subject_total_marks WHERE district_name IS NOT NULL 
AND block_latitude IS NOT NULL AND block_latitude <> 0 AND cluster_latitude IS NOT NULL 
AND cluster_latitude <> 0 AND school_latitude <>0 AND school_latitude IS NOT NULL AND school_name IS NOT NULL 
and school_id not in (select school_id from school_semester_no_data) and cluster_name is not null
GROUP BY school_id,grade; 

select a.x_axis,school_name,cluster_id,cluster_name,crc_name,block_id,block_name,x_value,district_id,district_name,y_axis,y_value,z_axis,z_value,
students_count,total_schools,a.semester, 
b.grade_3,b.grade_4,b.grade_5,b.grade_6,b.grade_7,b.grade_8
from
(SELECT school_id AS x_axis,Initcap(school_name) AS school_name,district_id,Initcap(district_name) AS district_name,block_id,Initcap(block_name)AS block_name,cluster_id,
Initcap(cluster_name) AS cluster_name,Initcap(crc_name)AS crc_name,
Sum(students_count) AS students_count,Count(DISTINCT(school_id)) AS total_schools,semester,
'latitude' AS y_axis,school_latitude AS y_value,'longitude' AS z_axis,school_longitude AS z_value,
Round(NULLIF(Sum(case when subject_1_marks_scored is null then 0 else subject_1_marks_scored end + 
	case when subject_3_marks_scored is null then 0 else subject_3_marks_scored end+case when subject_2_marks_scored is null then 0 else subject_2_marks_scored end
	+case when subject_4_marks_scored is null then 0 else subject_4_marks_scored end+
	case when subject_5_marks_scored is null then 0 else subject_5_marks_scored end+case when subject_7_marks_scored is null then 0 else subject_7_marks_scored end
	+case when subject_6_marks_scored is null then 0 else subject_6_marks_scored end+case when subject_8_marks_scored is null then 0 else subject_8_marks_scored end
	),0)*100.0/
NULLIF(Sum(subject_1_total_marks+subject_3_total_marks+subject_2_total_marks+subject_4_total_marks+subject_5_total_marks+
	subject_7_total_marks+subject_6_total_marks+subject_8_total_marks),0),1) AS x_value
FROM school_student_subject_total_marks WHERE district_name IS NOT NULL AND block_latitude IS NOT NULL 
AND block_latitude <> 0 AND cluster_latitude IS NOT NULL AND cluster_latitude <> 0 AND school_latitude <>0 and cluster_name is not null
AND school_latitude IS NOT NULL AND school_name IS NOT NULL and school_id not in (select school_id from school_semester_no_data)
GROUP BY school_id,school_name,crc_name,school_latitude,school_longitude,cluster_id,cluster_name,crc_name,block_id,block_name,district_id,district_name,semester )as a
left join 
(select * from crosstab(
'select x_axis,grade,x_value from school_grade order by 1',
'select distinct(grade) from school_grade order by 1') as 
(x_axis bigint,"grade_3" numeric,"grade_4" numeric,"grade_5" numeric,"grade_6" numeric
,"grade_7" numeric,"grade_8" numeric)
) as b
on a.x_axis=b.x_axis
''',
"sem_district-wise-assesment":'''create or replace view district_grade as
SELECT district_id AS x_axis,grade,
Round(NULLIF(Sum(case when subject_1_marks_scored is null then 0 else subject_1_marks_scored end +
    case when subject_3_marks_scored is null then 0 else subject_3_marks_scored end+case when subject_2_marks_scored is null then 0 else subject_2_marks_scored end
    +case when subject_4_marks_scored is null then 0 else subject_4_marks_scored end+
    case when subject_5_marks_scored is null then 0 else subject_5_marks_scored end+case when subject_7_marks_scored is null then 0 else subject_7_marks_scored end
    +case when subject_6_marks_scored is null then 0 else subject_6_marks_scored end+case when subject_8_marks_scored is null then 0 else subject_8_marks_scored end
    ),0)*100.0/
Sum(subject_1_total_marks+subject_3_total_marks+subject_2_total_marks+subject_4_total_marks+subject_5_total_marks+
    subject_7_total_marks+subject_6_total_marks+subject_8_total_marks),1)AS x_value
FROM school_student_subject_total_marks WHERE district_name IS NOT NULL AND block_latitude IS NOT NULL
AND block_latitude <> 0 AND cluster_latitude IS NOT NULL AND cluster_latitude <> 0 and cluster_name is not null
AND school_latitude <>0 AND school_latitude IS NOT NULL AND school_name IS NOT NULL
GROUP BY district_id,grade;


create or replace view district_school as
SELECT district_id AS x_axis,school_id,
Round(NULLIF(Sum(case when subject_1_marks_scored is null then 0 else subject_1_marks_scored end +
    case when subject_3_marks_scored is null then 0 else subject_3_marks_scored end+case when subject_2_marks_scored is null then 0 else subject_2_marks_scored end
    +case when subject_4_marks_scored is null then 0 else subject_4_marks_scored end+
    case when subject_5_marks_scored is null then 0 else subject_5_marks_scored end+case when subject_7_marks_scored is null then 0 else subject_7_marks_scored end
    +case when subject_6_marks_scored is null then 0 else subject_6_marks_scored end+case when subject_8_marks_scored is null then 0 else subject_8_marks_scored end
    ),0)*100.0/
Sum(subject_1_total_marks+subject_3_total_marks+subject_2_total_marks+subject_4_total_marks+subject_5_total_marks+
    subject_7_total_marks+subject_6_total_marks+subject_8_total_marks),1)AS x_value
FROM school_student_subject_total_marks WHERE district_name IS NOT NULL AND block_latitude IS NOT NULL
AND block_latitude <> 0 AND cluster_latitude IS NOT NULL AND cluster_latitude <> 0 and cluster_name is not null
AND school_latitude <>0 AND school_latitude IS NOT NULL AND school_name IS NOT NULL and school_id not in (select school_id from school_semester_no_data)
GROUP BY district_id,school_id;

select a.x_axis,district_name,x_value,y_axis,y_value,z_axis,z_value,students_count,total_schools,a.semester,
b.grade_3,b.grade_4,b.grade_5,b.grade_6,b.grade_7,b.grade_8,c.value_below_33,c.value_between_33_60,c.value_between_60_75,c.value_above_75,
c.percent_below_33,c.percent_between_33_60,c.percent_between_60_75,c.percent_above_75
from
(SELECT district_id AS x_axis,Initcap(district_name) AS district_name,
Round(Sum(case when subject_1_marks_scored is null then 0 else subject_1_marks_scored end +
    case when subject_3_marks_scored is null then 0 else subject_3_marks_scored end+case when subject_2_marks_scored is null then 0 else subject_2_marks_scored end
    +case when subject_4_marks_scored is null then 0 else subject_4_marks_scored end+
    case when subject_5_marks_scored is null then 0 else subject_5_marks_scored end+case when subject_7_marks_scored is null then 0 else subject_7_marks_scored end
    +case when subject_6_marks_scored is null then 0 else subject_6_marks_scored end+case when subject_8_marks_scored is null then 0 else subject_8_marks_scored end
    )*100.0/
Sum(subject_1_total_marks+subject_3_total_marks+subject_2_total_marks+subject_4_total_marks+subject_5_total_marks+
    subject_7_total_marks+subject_6_total_marks+subject_8_total_marks),1)AS x_value,
'latitude' AS y_axis,district_latitude AS y_value,'longitude' AS z_axis,district_longitude AS z_value,
Sum(students_count) AS students_count,Count(DISTINCT(school_id)) AS total_schools,semester
FROM school_student_subject_total_marks WHERE district_name IS NOT NULL AND block_latitude IS NOT NULL
AND block_latitude <> 0 AND cluster_latitude IS NOT NULL AND cluster_latitude <> 0 AND school_latitude <>0 and cluster_name is not null
AND school_latitude IS NOT NULL AND school_name IS NOT NULL and school_id not in (select school_id from school_semester_no_data)
GROUP BY district_id,district_latitude,district_longitude,district_name,semester)as a
left join
(select * from crosstab(
'select x_axis,grade,x_value from district_grade order by 1',
'select distinct(grade) from district_grade order by 1') as
(x_axis bigint,"grade_3" numeric(4,2),"grade_4" numeric(4,2),"grade_5" numeric(4,2),"grade_6" numeric(4,2)
,"grade_7" numeric(4,2),"grade_8" numeric(4,2))) b
on a.x_axis=b.x_axis
left join (select x_axis,
 sum(case when x_value <=33 then 1 else 0 end)as value_below_33,
 sum(case when x_value between 33 and 60 then 1 else 0 end)as value_between_33_60,
 sum(case when x_value between 60 and 75 then 1 else 0 end)as value_between_60_75,
 sum(case when x_value >=75 then 1 else 0 end)as value_above_75,
 round(sum(case when x_value <=33 then 1 else 0 end)*100.0/count(distinct(school_id)),2) as percent_below_33,
 round(sum(case when x_value between 33 and 60 then 1 else 0 end)*100.0/count(distinct(school_id)),2) as percent_between_33_60,
 round(sum(case when x_value between 60 and 75 then 1 else 0 end)*100.0/count(distinct(school_id)),2) as percent_between_60_75,
 round(sum(case when x_value >=75 then 1 else 0 end)*100.0/count(distinct(school_id)),2) as percent_above_75
   from district_school group by x_axis) as c
   on b.x_axis=c.x_axis
''',
"sem_cluster-wise-assesment":'''create or replace view cluster_school as
SELECT cluster_id AS x_axis,school_id,
Round(NULLIF(Sum(case when subject_1_marks_scored is null then 0 else subject_1_marks_scored end +
    case when subject_3_marks_scored is null then 0 else subject_3_marks_scored end+case when subject_2_marks_scored is null then 0 else subject_2_marks_scored end
    +case when subject_4_marks_scored is null then 0 else subject_4_marks_scored end+
    case when subject_5_marks_scored is null then 0 else subject_5_marks_scored end+case when subject_7_marks_scored is null then 0 else subject_7_marks_scored end
    +case when subject_6_marks_scored is null then 0 else subject_6_marks_scored end+case when subject_8_marks_scored is null then 0 else subject_8_marks_scored end
    ),0)*100.0/
Sum(subject_1_total_marks+subject_3_total_marks+subject_2_total_marks+subject_4_total_marks+subject_5_total_marks+
    subject_7_total_marks+subject_6_total_marks+subject_8_total_marks),1)AS x_value
FROM school_student_subject_total_marks WHERE district_name IS NOT NULL AND block_latitude IS NOT NULL AND block_latitude <> 0
AND cluster_latitude IS NOT NULL AND cluster_latitude <> 0 AND school_latitude <>0 and cluster_name is not null
AND school_latitude IS NOT NULL AND school_name IS NOT NULL
GROUP BY cluster_id,school_id;

create or replace view cluster_grade as
    SELECT cluster_id AS x_axis,grade,
Round(NULLIF(Sum(case when subject_1_marks_scored is null then 0 else subject_1_marks_scored end +
    case when subject_3_marks_scored is null then 0 else subject_3_marks_scored end+case when subject_2_marks_scored is null then 0 else subject_2_marks_scored end
    +case when subject_4_marks_scored is null then 0 else subject_4_marks_scored end+
    case when subject_5_marks_scored is null then 0 else subject_5_marks_scored end+case when subject_7_marks_scored is null then 0 else subject_7_marks_scored end
    +case when subject_6_marks_scored is null then 0 else subject_6_marks_scored end+case when subject_8_marks_scored is null then 0 else subject_8_marks_scored end
    ),0)*100.0/
Sum(subject_1_total_marks+subject_3_total_marks+subject_2_total_marks+subject_4_total_marks+subject_5_total_marks+
    subject_7_total_marks+subject_6_total_marks+subject_8_total_marks),1)AS x_value
FROM school_student_subject_total_marks WHERE district_name IS NOT NULL AND block_latitude IS NOT NULL
AND block_latitude <> 0 AND cluster_latitude IS NOT NULL AND cluster_latitude <> 0 AND school_latitude <>0 and cluster_name is not null
AND school_latitude IS NOT NULL AND school_name IS NOT NULL and school_id not in (select school_id from school_semester_no_data)
GROUP BY cluster_id,grade;

select a.x_axis,cluster_name,block_id,block_name,x_value,district_id,district_name,y_axis,y_value,z_axis,z_value,students_count,total_schools,a.semester,
b.grade_3,b.grade_4,b.grade_5,b.grade_6,b.grade_7,b.grade_8,c.value_below_33,c.value_between_33_60,c.value_between_60_75,c.value_above_75,
c.percent_below_33,c.percent_between_33_60,c.percent_between_60_75,c.percent_above_75
from
(SELECT distinct cluster_id AS x_axis,INITCAP(cluster_name) AS cluster_name,district_id,
    INITCAP(district_name) AS district_name,block_id,INITCAP(block_name) AS block_name,
Sum(students_count) AS students_count,Count(DISTINCT(school_id)) AS total_schools,semester,
'latitude' AS y_axis,cluster_latitude AS y_value,'longitude' AS z_axis,cluster_longitude AS z_value,
Round(NULLIF(Sum(case when subject_1_marks_scored is null then 0 else subject_1_marks_scored end +
    case when subject_3_marks_scored is null then 0 else subject_3_marks_scored end+case when subject_2_marks_scored is null then 0 else subject_2_marks_scored end
    +case when subject_4_marks_scored is null then 0 else subject_4_marks_scored end+
    case when subject_5_marks_scored is null then 0 else subject_5_marks_scored end+case when subject_7_marks_scored is null then 0 else subject_7_marks_scored end
    +case when subject_6_marks_scored is null then 0 else subject_6_marks_scored end+case when subject_8_marks_scored is null then 0 else subject_8_marks_scored end
    ),0)*100.0/
NULLIF(Sum(subject_1_total_marks+subject_3_total_marks+subject_2_total_marks+subject_4_total_marks+subject_5_total_marks+
    subject_7_total_marks+subject_6_total_marks+subject_8_total_marks),0),1) AS x_value
FROM school_student_subject_total_marks WHERE district_name IS NOT NULL AND block_latitude IS NOT NULL and cluster_name is not null
AND block_latitude <> 0 AND cluster_latitude IS NOT NULL AND cluster_latitude <> 0 AND school_latitude <>0
AND school_latitude IS NOT NULL AND school_name IS NOT NULL and school_id not in (select school_id from school_semester_no_data)
GROUP BY cluster_id,cluster_name,cluster_latitude,cluster_longitude,block_id,block_name,district_id,district_name,semester )as a
left join
(select * from crosstab(
'select x_axis,grade,x_value from cluster_grade order by 1',
'select distinct(grade) from cluster_grade order by 1') as
(x_axis bigint,"grade_3" numeric,"grade_4" numeric,"grade_5" numeric,"grade_6" numeric
,"grade_7" numeric,"grade_8" numeric)
) as b
on a.x_axis=b.x_axis
left join (
select x_axis,sum(case when x_value <=33 then 1 else 0 end)as value_below_33,
 sum(case when x_value between 33 and 60 then 1 else 0 end)as value_between_33_60,
 sum(case when x_value between 60 and 75 then 1 else 0 end)as value_between_60_75,
 sum(case when x_value >=75 then 1 else 0 end)as value_above_75,
 round(sum(case when x_value <=33 then 1 else 0 end)*100.0/count(distinct(school_id)),2) as percent_below_33,
 round(sum(case when x_value between 33 and 60 then 1 else 0 end)*100.0/count(distinct(school_id)),2) as percent_between_33_60,
 round(sum(case when x_value between 60 and 75 then 1 else 0 end)*100.0/count(distinct(school_id)),2) as percent_between_60_75,
 round(sum(case when x_value >=75 then 1 else 0 end)*100.0/count(distinct(school_id)),2) as percent_above_75
   from cluster_school group by x_axis)as c
on b.x_axis=c.x_axis
''',
"sem_block-wise-assesment":'''create or replace view block_school as
SELECT block_id AS x_axis,school_id,
Round(NULLIF(Sum(case when subject_1_marks_scored is null then 0 else subject_1_marks_scored end +
    case when subject_3_marks_scored is null then 0 else subject_3_marks_scored end+case when subject_2_marks_scored is null then 0 else subject_2_marks_scored end
    +case when subject_4_marks_scored is null then 0 else subject_4_marks_scored end+
    case when subject_5_marks_scored is null then 0 else subject_5_marks_scored end+case when subject_7_marks_scored is null then 0 else subject_7_marks_scored end
    +case when subject_6_marks_scored is null then 0 else subject_6_marks_scored end+case when subject_8_marks_scored is null then 0 else subject_8_marks_scored end
    ),0)*100.0/
Sum(subject_1_total_marks+subject_3_total_marks+subject_2_total_marks+subject_4_total_marks+subject_5_total_marks+
    subject_7_total_marks+subject_6_total_marks+subject_8_total_marks),1)AS x_value
FROM school_student_subject_total_marks WHERE district_name IS NOT NULL AND block_latitude IS NOT NULL
AND block_latitude <> 0 AND cluster_latitude IS NOT NULL AND cluster_latitude <> 0 AND school_latitude <>0
AND school_latitude IS NOT NULL AND school_name IS NOT NULL and cluster_name is not null
GROUP BY block_id,school_id;

create or replace view block_grade as
    SELECT block_id AS x_axis,grade,
Round(Sum(case when subject_1_marks_scored is null then 0 else subject_1_marks_scored end +
    case when subject_3_marks_scored is null then 0 else subject_3_marks_scored end+case when subject_2_marks_scored is null then 0 else subject_2_marks_scored end
    +case when subject_4_marks_scored is null then 0 else subject_4_marks_scored end+
    case when subject_5_marks_scored is null then 0 else subject_5_marks_scored end+case when subject_7_marks_scored is null then 0 else subject_7_marks_scored end
    +case when subject_6_marks_scored is null then 0 else subject_6_marks_scored end+case when subject_8_marks_scored is null then 0 else subject_8_marks_scored end
    )*100.0/
Sum(subject_1_total_marks+subject_3_total_marks+subject_2_total_marks+subject_4_total_marks+subject_5_total_marks+
    subject_7_total_marks+subject_6_total_marks+subject_8_total_marks),1)AS x_value
FROM school_student_subject_total_marks WHERE district_name IS NOT NULL AND block_latitude IS NOT NULL and cluster_name is not null
AND block_latitude <> 0 AND cluster_latitude IS NOT NULL AND cluster_latitude <> 0 AND school_latitude <>0
AND school_latitude IS NOT NULL AND school_name IS NOT NULL and school_id not in (select school_id from school_semester_no_data)
GROUP BY block_id,grade
;
select a.x_axis,block_name,x_value,district_id,district_name,y_axis,y_value,z_axis,z_value,students_count,total_schools,a.semester,
b.grade_3,b.grade_4,b.grade_5,b.grade_6,b.grade_7,b.grade_8,c.value_below_33,c.value_between_33_60,c.value_between_60_75,c.value_above_75,
c.percent_below_33,c.percent_between_33_60,c.percent_between_60_75,c.percent_above_75
from
(SELECT block_id AS x_axis,Initcap(block_name) AS block_name,district_id,Initcap(district_name) AS district_name
    ,'latitude' AS y_axis,block_latitude AS y_value,'longitude' AS z_axis,block_longitude AS z_value,
Sum(students_count) AS students_count,Count(DISTINCT(school_id)) AS total_schools,semester,
Round(Sum(case when subject_1_marks_scored is null then 0 else subject_1_marks_scored end +
    case when subject_3_marks_scored is null then 0 else subject_3_marks_scored end+case when subject_2_marks_scored is null then 0 else subject_2_marks_scored end
    +case when subject_4_marks_scored is null then 0 else subject_4_marks_scored end+
    case when subject_5_marks_scored is null then 0 else subject_5_marks_scored end+case when subject_7_marks_scored is null then 0 else subject_7_marks_scored end
    +case when subject_6_marks_scored is null then 0 else subject_6_marks_scored end+case when subject_8_marks_scored is null then 0 else subject_8_marks_scored end
    )*100.0/
Sum(subject_1_total_marks+subject_3_total_marks+subject_2_total_marks+subject_4_total_marks+subject_5_total_marks+
    subject_7_total_marks+subject_6_total_marks+subject_8_total_marks),1)AS x_value
FROM school_student_subject_total_marks WHERE district_name IS NOT NULL AND block_latitude IS NOT NULL
AND block_latitude <> 0 AND cluster_latitude IS NOT NULL AND cluster_latitude <> 0 AND school_latitude <>0 and cluster_name is not null
AND school_latitude IS NOT NULL AND school_name IS NOT NULL and school_id not in (select school_id from school_semester_no_data)
GROUP BY block_id,block_name,block_latitude,block_longitude,district_id,district_name,semester )as a
left join
(select * from crosstab(
'select x_axis,grade,x_value from block_grade order by 1',
'select distinct(grade) from block_grade order by 1') as
(x_axis bigint,"grade_3" numeric(4,2),"grade_4" numeric(4,2),"grade_5" numeric(4,2),"grade_6" numeric(4,2)
,"grade_7" numeric(4,2),"grade_8" numeric(4,2))
) as b
on a.x_axis=b.x_axis left join
(select x_axis,sum(case when x_value <=33 then 1 else 0 end)as value_below_33,
 sum(case when x_value between 33 and 60 then 1 else 0 end)as value_between_33_60,
 sum(case when x_value between 60 and 75 then 1 else 0 end)as value_between_60_75,
 sum(case when x_value >=75 then 1 else 0 end)as value_above_75,
 round(sum(case when x_value <=33 then 1 else 0 end)*100.0/count(distinct(school_id)),2) as percent_below_33,
 round(sum(case when x_value between 33 and 60 then 1 else 0 end)*100.0/count(distinct(school_id)),2) as percent_between_33_60,
 round(sum(case when x_value between 60 and 75 then 1 else 0 end)*100.0/count(distinct(school_id)),2) as percent_between_60_75,
 round(sum(case when x_value >=75 then 1 else 0 end)*100.0/count(distinct(school_id)),2) as percent_above_75
   from block_school group by x_axis) as c
on b.x_axis=c.x_axis
''',
"sem_transform_district_wise":'''[{
        "operation": "shift",
        "spec": {
            "*": {
                "x_axis": "data.[&1].x_axis",
                "district_name": "data.[&1].district_name",
                "x_value": "data.[&1].x_value",
                "y_axis": "data.[&1].y_axis",
                "y_value": "data.[&1].y_value",
                "z_axis": "data.[&1].z_axis",
                "z_value": "data.[&1].z_value",
                "semester": "data.[&1].semester",
                "grade_3": "data.[&1].grade_3",
                "grade_4": "data.[&1].grade_4",
                "grade_5": "data.[&1].grade_5",
                "grade_6": "data.[&1].grade_6",
                "grade_7": "data.[&1].grade_7",
                "grade_8": "data.[&1].grade_8",
                "value_below_33": "data.[&1].value_below_33",
                "value_between_33_60": "data.[&1].value_between_33_60",
                "value_between_60_75": "data.[&1].value_between_60_75",
                "value_above_75": "data.[&1].value_above_75",
                "percent_below_33": "data.[&1].percent_below_33",
                "percent_between_33_60": "data.[&1].percent_between_33_60",
                "percent_between_60_75": "data.[&1].percent_between_60_75",
                "percent_above_75": "data.[&1].percent_above_75",
                "@students_count": "data.[&1].students_count",
                "@total_schools": "data.[&1].total_schools",
                "students_count": "allDistrictsFooter.students[]",
                "total_schools": "allDistrictsFooter.schools[]"
            }
        }
    }, {
        "operation": "modify-overwrite-beta",
        "spec": {
            "*": {
                "students": "=intSum(@(1,students))",
                "schools": "=intSum(@(1,schools))"
            }
        }
    }

]
''',
"sem_transform_school_wise":'''[
  {
    "operation": "modify-overwrite-beta",
    "spec": {
      "*": {
        "cluster_id": ["=toString", null]
       
      }
    }
    },
  {
    "operation": "shift",
    "spec": {
      "*": {
        "x_axis": "data.[&1].x_axis",
        "school_name": "data.[&1].school_name",
        "cluster_id": "data.[&1].cluster_id",
        "cluster_name": "data.[&1].cluster_name",
        "crc_name": "data.[&1].crc_name",
        "district_id": "data.[&1].district_id",
        "district_name": "data.[&1].district_name",
        "block_id": "data.[&1].block_id",
        "block_name": "data.[&1].block_name",
        "x_value": "data.[&1].x_value",
        "y_axis": "data.[&1].y_axis",
        "y_value": "data.[&1].y_value",
        "z_axis": "data.[&1].z_axis",
        "z_value": "data.[&1].z_value",
        "semester": "data.[&1].semester",
       "grade_3": "data.[&1].grade_3",
       "grade_4": "data.[&1].grade_4",
       "grade_5": "data.[&1].grade_5",
       "grade_6": "data.[&1].grade_6",
       "grade_7": "data.[&1].grade_7",
       "grade_8": "data.[&1].grade_8",

        "@students_count": "data.[&1].students_count",
        "@total_schools": "data.[&1].total_schools",
        "students_count": "footer.@(1,cluster_id).students[]",
        "total_schools": "footer.@(1,cluster_id).schools[]"
      }
    }
    },

  {
    "operation": "modify-overwrite-beta",
    "spec": {
      "footer": {
        "*": {
          "students": "=intSum(@(1,students))",
          "schools": "=intSum(@(1,schools))"
        }
      }
    }
    }
 , {
    "operation": "shift",
    "spec": {
      "data": {
        "*": {
          "x_axis": "data.[&1].x_axis",
          "school_name": "data.[&1].school_name",
          "cluster_id": "data.[&1].cluster_id",
          "cluster_name": "data.[&1].cluster_name",
          "crc_name": "data.[&1].crc_name",
          "district_id": "data.[&1].district_id",
          "district_name": "data.[&1].district_name",
          "block_id": "data.[&1].block_id",
          "block_name": "data.[&1].block_name",
          "x_value": "data.[&1].x_value",
          "y_axis": "data.[&1].y_axis",
          "y_value": "data.[&1].y_value",
          "z_axis": "data.[&1].z_axis",
          "z_value": "data.[&1].z_value",
          "semester": "data.[&1].semester",
       "grade_3": "data.[&1].grade_3",
       "grade_4": "data.[&1].grade_4",
       "grade_5": "data.[&1].grade_5",
       "grade_6": "data.[&1].grade_6",
       "grade_7": "data.[&1].grade_7",
       "grade_8": "data.[&1].grade_8",
"@students_count": "data.[&1].students_count",
          "@total_schools": "data.[&1].total_schools",
          "students_count": "allSchoolsFooter.students[]",
          "total_schools": "allSchoolsFooter.schools[]"
        }
      },
      "footer": "&"
    }
    }, {
    "operation": "modify-overwrite-beta",
    "spec": {
      "*": {
        "students": "=intSum(@(1,students))",
        "schools": "=intSum(@(1,schools))"
      }
    }
    },
  {
    "operation": "modify-overwrite-beta",
    "spec": {
      "foot": {
      "*": {
       
      }
    }
    }
  }
]
''',
"sem_transform_cluster_wise":'''[{
    "operation": "shift",
    "spec": {
      "*": {
        "x_axis": "data.[&1].x_axis",
        "cluster_name": "data.[&1].cluster_name",
                "district_id": "data.[&1].district_id",
        "district_name": "data.[&1].district_name",
        "block_id": "data.[&1].block_id",
        "block_name": "data.[&1].block_name",
        "x_value": "data.[&1].x_value",
        "y_axis": "data.[&1].y_axis",
        "y_value": "data.[&1].y_value",
        "z_axis": "data.[&1].z_axis",
        "z_value": "data.[&1].z_value",
        "semester": "data.[&1].semester",
       "grade_3": "data.[&1].grade_3",
       "grade_4": "data.[&1].grade_4",
       "grade_5": "data.[&1].grade_5",
       "grade_6": "data.[&1].grade_6",
       "grade_7": "data.[&1].grade_7",
       "grade_8": "data.[&1].grade_8",
       "value_below_33": "data.[&1].value_below_33",
       "value_between_33_60": "data.[&1].value_between_33_60",
       "value_between_60_75": "data.[&1].value_between_60_75",
       "value_above_75": "data.[&1].value_above_75",
       "percent_below_33": "data.[&1].percent_below_33",
       "percent_between_33_60": "data.[&1].percent_between_33_60",
       "percent_between_60_75": "data.[&1].percent_between_60_75",
       "percent_above_75": "data.[&1].percent_above_75",

    
        
        "@students_count": "data.[&1].students_count",
        "@total_schools": "data.[&1].total_schools",
        "students_count": "footer.@(1,block_id).students[]",
        "total_schools": "footer.@(1,block_id).schools[]"
      }
    }
},

  {
    "operation": "modify-overwrite-beta",
    "spec": {
      "footer": {
        "*": {
          "students": "=intSum(@(1,students))",
          "schools": "=intSum(@(1,schools))"
        }
      }
    }
  },
  {
    "operation": "shift",
    "spec": {
      "data": {
        "*": {
                  "x_axis": "data.[&1].x_axis",
        "cluster_name": "data.[&1].cluster_name",
       
        "district_id": "data.[&1].district_id",
        "district_name": "data.[&1].district_name",
        "block_id": "data.[&1].block_id",
        "block_name": "data.[&1].block_name",
        "x_value": "data.[&1].x_value",
        "y_axis": "data.[&1].y_axis",
        "y_value": "data.[&1].y_value",
        "z_axis": "data.[&1].z_axis",
        "z_value": "data.[&1].z_value",
    "semester": "data.[&1].semester",
       "grade_3": "data.[&1].grade_3",
       "grade_4": "data.[&1].grade_4",
       "grade_5": "data.[&1].grade_5",
       "grade_6": "data.[&1].grade_6",
       "grade_7": "data.[&1].grade_7",
       "grade_8": "data.[&1].grade_8",
       "value_below_33": "data.[&1].value_below_33",
       "value_between_33_60": "data.[&1].value_between_33_60",
       "value_between_60_75": "data.[&1].value_between_60_75",
       "value_above_75": "data.[&1].value_above_75",
       "percent_below_33": "data.[&1].percent_below_33",
       "percent_between_33_60": "data.[&1].percent_between_33_60",
       "percent_between_60_75": "data.[&1].percent_between_60_75",
       "percent_above_75": "data.[&1].percent_above_75",

          "@students_count": "data.[&1].students_count",
          "@total_schools": "data.[&1].total_schools",
          "students_count": "allClustersFooter.students[]",
          "total_schools": "allClustersFooter.schools[]"
        }
      },
      "footer": "&"
    }
  },
  {
    "operation": "modify-overwrite-beta",
    "spec": {
      "*": {
        "students": "=intSum(@(1,students))",
        "schools": "=intSum(@(1,schools))"
      }
    }
  }

]
''',
"sem_transform_block_wise":'''[{
   "operation": "shift",
   "spec": {
     "*": {
       "x_axis": "data.[&1].x_axis",
       "district_name": "data.[&1].district_name",
       "district_id": "data.[&1].district_id",
       "block_name": "data.[&1].block_name",
       "x_value": "data.[&1].x_value",
       "y_axis": "data.[&1].y_axis",
       "y_value": "data.[&1].y_value",
       "z_axis": "data.[&1].z_axis",
       "z_value": "data.[&1].z_value",
       "semester": "data.[&1].semester",
       "grade_3": "data.[&1].grade_3",
       "grade_4": "data.[&1].grade_4",
       "grade_5": "data.[&1].grade_5",
       "grade_6": "data.[&1].grade_6",
       "grade_7": "data.[&1].grade_7",
       "grade_8": "data.[&1].grade_8",
       "value_below_33": "data.[&1].value_below_33",
       "value_between_33_60": "data.[&1].value_between_33_60",
       "value_between_60_75": "data.[&1].value_between_60_75",
       "value_above_75": "data.[&1].value_above_75",
       "percent_below_33": "data.[&1].percent_below_33",
       "percent_between_33_60": "data.[&1].percent_between_33_60",
       "percent_between_60_75": "data.[&1].percent_between_60_75",
       "percent_above_75": "data.[&1].percent_above_75",
 
 
 
 
       "@students_count": "data.[&1].students_count",
       "@total_schools": "data.[&1].total_schools",
       "students_count": "footer.@(1,district_id).students[]",
       "total_schools": "footer.@(1,district_id).schools[]"
     }
   }
},
 
 {
   "operation": "modify-overwrite-beta",
   "spec": {
     "footer": {
       "*": {
         "students": "=intSum(@(1,students))",
         "schools": "=intSum(@(1,schools))"
       }
     }
   }
 },
 {
   "operation": "shift",
   "spec": {
     "data": {
       "*": {
         "x_axis": "data.[&1].x_axis",
         "district_name": "data.[&1].district_name",
         "district_id": "data.[&1].district_id",
         "block_name": "data.[&1].block_name",
         "x_value": "data.[&1].x_value",
         "y_axis": "data.[&1].y_axis",
         "y_value": "data.[&1].y_value",
         "z_axis": "data.[&1].z_axis",
         "z_value": "data.[&1].z_value",
         "semester": "data.[&1].semester",
       "grade_3": "data.[&1].grade_3",
       "grade_4": "data.[&1].grade_4",
       "grade_5": "data.[&1].grade_5",
       "grade_6": "data.[&1].grade_6",
       "grade_7": "data.[&1].grade_7",
       "grade_8": "data.[&1].grade_8",
       "value_below_33": "data.[&1].value_below_33",
       "value_between_33_60": "data.[&1].value_between_33_60",
       "value_between_60_75": "data.[&1].value_between_60_75",
       "value_above_75": "data.[&1].value_above_75",
       "percent_below_33": "data.[&1].percent_below_33",
       "percent_between_33_60": "data.[&1].percent_between_33_60",
       "percent_between_60_75": "data.[&1].percent_between_60_75",
       "percent_above_75": "data.[&1].percent_above_75",
 
         "@students_count": "data.[&1].students_count",
         "@total_schools": "data.[&1].total_schools",
         "students_count": "allBlocksFooter.students[]",
         "total_schools": "allBlocksFooter.schools[]"
       }
     },
     "footer": "&"
   }
 },
 {
   "operation": "modify-overwrite-beta",
   "spec": {
     "*": {
       "students": "=intSum(@(1,students))",
       "schools": "=intSum(@(1,schools))"
     }
   }
 }
 
]
''',
"sem_district_wise_completion_list":'''select a.district_id,a.district_name,a.district_latitude,a.district_longitude,
a.total_schools_not_received,b.total_schools,a.semester,
round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_not_received
from 
(select district_id ,district_name,district_latitude,district_longitude,
Count(DISTINCT(school_id)) AS total_schools_not_received,semester
from semester_exception_completion_data
group by district_id,district_name,district_latitude,district_longitude,semester
)as a
join (select district_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by district_id)as b
on a.district_id=b.district_id''',
"sem_block_wise_completion_list":'''select a.district_id,a.district_name,a.block_id,a.block_name,a.block_latitude,a.block_longitude,
a.total_schools_not_received,b.total_schools,a.semester,
round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_not_received
from 
(select district_id ,district_name,block_id,block_name,block_latitude,block_longitude,
Count(DISTINCT(school_id)) AS total_schools_not_received,semester
from semester_exception_completion_data
group by district_id,district_name,block_id,block_name,block_latitude,block_longitude,semester
)as a
join (select block_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by block_id)as b
on a.block_id=b.block_id''',
"sem_cluster_wise_completion_list":'''select a.district_id,a.district_name,a.block_id,a.block_name,a.cluster_id,a.cluster_name,a.cluster_latitude,a.cluster_longitude,
a.total_schools_not_received,b.total_schools,a.semester,
round((cast(a.total_schools_not_received as numeric)/cast(b.total_schools as numeric))*100.0,2) as percentage_schools_not_received
from 
(select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,semester,
Count(DISTINCT(school_id)) AS total_schools_not_received
from semester_exception_completion_data
group by district_id,district_name,block_id,block_name,cluster_id,cluster_name,cluster_latitude,cluster_longitude,semester
)as a
join (select cluster_id,count(distinct(school_id)) as total_schools from school_hierarchy_details group by cluster_id)as b
on a.cluster_id=b.cluster_id''',
"sem_school_wise_completion_list":'''select district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,semester,Count(DISTINCT(school_id)) AS total_schools_not_received
from semester_exception_completion_data
group by district_id ,district_name,block_id,block_name,cluster_id,cluster_name,school_id,school_name,school_latitude,school_longitude,semester''',
"sem_transform_district_wise_completion":'''[{
        "operation": "shift",
        "spec": {
            "*": {
                "district_id": "data.[&1].district_id",
                "district_name": "data.[&1].district_name",
                "district_latitude": "data.[&1].district_latitude",
                "district_longitude": "data.[&1].district_longitude",
                "total_schools": "data.[&1].total_schools",
                "semester": "data.[&1].semester",
                "percentage_schools_not_received": "data.[&1].percentage_schools_not_received",
                "@total_schools_not_received": "data.[&1].total_schools_not_received",
                "total_schools_not_received": "allDistrictsFooter.total_schools_not_received[]"
 
            }
        }
    }, {
        "operation": "modify-overwrite-beta",
        "spec": {
            "*": {
                "total_schools_not_received": "=intSum(@(1,total_schools_not_received))"
 
            }
        }
    }
 ]
''',
"sem_transform_block_wise_completion":'''[{
        "operation": "shift",
        "spec": {
            "*": {
                "district_id": "data.[&1].district_id",
                "district_name": "data.[&1].district_name",
                "block_id": "data.[&1].block_id",
                "block_name": "data.[&1].block_name",
                "block_latitude": "data.[&1].block_latitude",
                "block_longitude": "data.[&1].block_longitude",
                "total_schools": "data.[&1].total_schools",
                "semester": "data.[&1].semester",
                "percentage_schools_not_received": "data.[&1].percentage_schools_not_received",
                "@total_schools_not_received": "data.[&1].total_schools_not_received",
                "total_schools_not_received": "allBlocksFooter.total_schools_not_received[]"
 
            }
        }
    }, {
        "operation": "modify-overwrite-beta",
        "spec": {
            "*": {
                "total_schools_not_received": "=intSum(@(1,total_schools_not_received))"
 
            }
        }
    }
 ]
''',
"sem_transform_cluster_wise_completion":'''[{
        "operation": "shift",
        "spec": {
            "*": {
                "district_id": "data.[&1].district_id",
                "district_name": "data.[&1].district_name",
                "block_id": "data.[&1].block_id",
                "block_name": "data.[&1].block_name",
               "cluster_id": "data.[&1].cluster_id",
                "cluster_name": "data.[&1].cluster_name",
              "cluster_latitude": "data.[&1].cluster_latitude",
                "cluster_longitude": "data.[&1].cluster_longitude",
                "total_schools": "data.[&1].total_schools",
                "semester": "data.[&1].semester",
                "percentage_schools_not_received": "data.[&1].percentage_schools_not_received",
                "@total_schools_not_received": "data.[&1].total_schools_not_received",
                "total_schools_not_received": "allClustersFooter.total_schools_not_received[]"
 
            }
        }
    }, {
        "operation": "modify-overwrite-beta",
        "spec": {
            "*": {
                "total_schools_not_received": "=intSum(@(1,total_schools_not_received))"
 
            }
        }
    }
 ]
''',
"sem_transform_school_wise_completion":'''[{
        "operation": "shift",
        "spec": {
            "*": {
                "district_id": "data.[&1].district_id",
                "district_name": "data.[&1].district_name",
                "block_id": "data.[&1].block_id",
                "block_name": "data.[&1].block_name",
               "cluster_id": "data.[&1].cluster_id",
                "cluster_name": "data.[&1].cluster_name",
              "school_id": "data.[&1].school_id",
                "school_name": "data.[&1].school_name",
              "school_latitude": "data.[&1].school_latitude",
                "school_longitude": "data.[&1].school_longitude",
                "total_schools": "data.[&1].total_schools",
                "semester": "data.[&1].semester",
                "percentage_schools_not_received": "data.[&1].percentage_schools_not_received",
                "@total_schools_not_received": "data.[&1].total_schools_not_received",
                "total_schools_not_received": "allSchoolsFooter.total_schools_not_received[]"
 
            }
        }
    }, {
        "operation": "modify-overwrite-beta",
        "spec": {
            "*": {
                "total_schools_not_received": "=intSum(@(1,total_schools_not_received))"
 
            }
        }
    }
 ]
'''
}
